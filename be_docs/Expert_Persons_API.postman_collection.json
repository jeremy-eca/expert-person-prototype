{
	"info": {
		"_postman_id": "d5c9aa8f-c7df-4a01-8ae4-5e37e0f2c012",
		"name": "Expert Persons API",
		"description": "Complete collection for all Expert Persons API endpoints using HMAC JWT authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login (JWT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"if (response.token) {",
									"    pm.environment.set(\"jwtToken\", response.token);",
									"    console.log(\"JWT token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with username and password to obtain a JWT token"
					},
					"response": []
				},
				{
					"name": "Generate Service Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"if (response.success && response.data && response.data.token) {",
									"    pm.environment.set(\"serviceToken\", response.data.token);",
									"    console.log(\"Service token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							},
							{
								"key": "X-Tenant-ID",
								"value": "{{tenantId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/service-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"service-token"
							]
						},
						"description": "Exchange a JWT token for a service token for HMAC JWT authentication"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for obtaining JWT and service tokens"
		},
		{
			"name": "Persons",
			"item": [
				{
					"name": "Get All Persons",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/persons?limit=10&offset=0&include=children,partners,addresses,contact_details,employment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"persons"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of records to return (max 500)"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Pagination offset"
								},
								{
									"key": "include",
									"value": "children,partners,addresses,contact_details,employment",
									"description": "Comma-separated list of related data to include"
								}
							]
						},
						"description": "Get a paginated list of all persons with optional related data"
					},
					"response": []
				},
				{
					"name": "Get Person by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/persons/:personId?include=children,partners,addresses,contact_details,employment,passports,payroll_details,permits_visas,salaries,security_clearances,social_security_numbers,tax_domiciles,notes,languages,government_identifiers,flags,emergency_contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"persons",
								":personId"
							],
							"query": [
								{
									"key": "include",
									"value": "children,partners,addresses,contact_details,employment,passports,payroll_details,permits_visas,salaries,security_clearances,social_security_numbers,tax_domiciles,notes,languages,government_identifiers,flags,emergency_contacts",
									"description": "Comma-separated list of related data to include"
								}
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person to retrieve"
								}
							]
						},
						"description": "Get a single person by ID with optional related data"
					},
					"response": []
				},
				{
					"name": "Create Person",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"preferred_name\": \"Johnny\",\n  \"email\": \"john.doe@example.com\",\n  \"date_of_birth\": \"1980-01-01\",\n  \"employee_reference\": {\n    \"primary\": \"EMP-1234\",\n    \"secondary\": \"HR-5678\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/persons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"persons"
							]
						},
						"description": "Create a new person record"
					},
					"response": []
				},
				{
					"name": "Update Person",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"preferred_name\": \"Johnny\",\n  \"employee_reference\": {\n    \"primary\": \"EMP-4321\",\n    \"secondary\": \"HR-8765\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/persons/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"persons",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person to update"
								}
							]
						},
						"description": "Update an existing person record"
					},
					"response": []
				},
				{
					"name": "Delete Person",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/persons/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"persons",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person to delete"
								}
							]
						},
						"description": "Soft delete a person record"
					},
					"response": []
				}
			],
			"description": "Core Person endpoints"
		},
		{
			"name": "Addresses",
			"item": [
				{
					"name": "Get Addresses by Person ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/addresses/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"addresses",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person"
								}
							]
						},
						"description": "Get all addresses for a specific person"
					},
					"response": []
				},
				{
					"name": "Create Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"person_id\": \"{{personId}}\",\n  \"address_type_id\": \"{{addressTypeId}}\",\n  \"address_line_1\": \"123 Main Street\",\n  \"address_line_2\": \"Apt 4B\",\n  \"city\": \"London\",\n  \"state_province\": \"Greater London\",\n  \"postal_code\": \"SW1A 1AA\",\n  \"country_id\": \"{{countryId}}\",\n  \"is_primary\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"addresses"
							]
						},
						"description": "Create a new address for a person"
					},
					"response": []
				},
				{
					"name": "Update Address",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address_line_1\": \"456 New Street\",\n  \"address_line_2\": \"Suite 7C\",\n  \"city\": \"London\",\n  \"state_province\": \"Greater London\",\n  \"postal_code\": \"SW1A 2BB\",\n  \"is_primary\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/addresses/:addressId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"addresses",
								":addressId"
							],
							"variable": [
								{
									"key": "addressId",
									"value": "",
									"description": "UUID of the address to update"
								}
							]
						},
						"description": "Update an existing address"
					},
					"response": []
				},
				{
					"name": "Delete Address",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/addresses/:addressId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"addresses",
								":addressId"
							],
							"variable": [
								{
									"key": "addressId",
									"value": "",
									"description": "UUID of the address to delete"
								}
							]
						},
						"description": "Delete an address (soft delete)"
					},
					"response": []
				}
			],
			"description": "Person address endpoints"
		},
		{
			"name": "Contact Details",
			"item": [
				{
					"name": "Get Contact Details by Person ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/contact-details/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contact-details",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person"
								}
							]
						},
						"description": "Get all contact details for a specific person"
					},
					"response": []
				},
				{
					"name": "Create Contact Detail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"person_id\": \"{{personId}}\",\n  \"contact_type\": \"email\",\n  \"contact_value\": \"john.doe@example.com\",\n  \"is_primary\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/contact-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contact-details"
							]
						},
						"description": "Create a new contact detail for a person"
					},
					"response": []
				},
				{
					"name": "Update Contact Detail",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contact_value\": \"john.updated@example.com\",\n  \"is_primary\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/contact-details/:contactDetailId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contact-details",
								":contactDetailId"
							],
							"variable": [
								{
									"key": "contactDetailId",
									"value": "",
									"description": "UUID of the contact detail to update"
								}
							]
						},
						"description": "Update an existing contact detail"
					},
					"response": []
				},
				{
					"name": "Delete Contact Detail",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/contact-details/:contactDetailId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contact-details",
								":contactDetailId"
							],
							"variable": [
								{
									"key": "contactDetailId",
									"value": "",
									"description": "UUID of the contact detail to delete"
								}
							]
						},
						"description": "Delete a contact detail (soft delete)"
					},
					"response": []
				}
			],
			"description": "Person contact details endpoints"
		},
		{
			"name": "Employment",
			"item": [
				{
					"name": "Get Employment by Person ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/employments/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employments",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person"
								}
							]
						},
						"description": "Get all employment records for a specific person"
					},
					"response": []
				},
				{
					"name": "Create Employment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"person_id\": \"{{personId}}\",\n  \"employer\": \"Acme Corporation\",\n  \"job_title\": \"Software Engineer\",\n  \"start_date\": \"2020-01-15\",\n  \"end_date\": null,\n  \"is_current\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employments"
							]
						},
						"description": "Create a new employment record for a person"
					},
					"response": []
				},
				{
					"name": "Update Employment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"job_title\": \"Senior Software Engineer\",\n  \"end_date\": \"2023-12-31\",\n  \"is_current\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employments/:employmentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employments",
								":employmentId"
							],
							"variable": [
								{
									"key": "employmentId",
									"value": "",
									"description": "UUID of the employment record to update"
								}
							]
						},
						"description": "Update an existing employment record"
					},
					"response": []
				},
				{
					"name": "Delete Employment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/employments/:employmentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employments",
								":employmentId"
							],
							"variable": [
								{
									"key": "employmentId",
									"value": "",
									"description": "UUID of the employment record to delete"
								}
							]
						},
						"description": "Delete an employment record (soft delete)"
					},
					"response": []
				}
			],
			"description": "Person employment endpoints"
		},
		{
			"name": "Children",
			"item": [
				{
					"name": "Get Children by Person ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/children/:personId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"children",
								":personId"
							],
							"variable": [
								{
									"key": "personId",
									"value": "",
									"description": "UUID of the person"
								}
							]
						},
						"description": "Get all children for a specific person"
					},
					"response": []
				},
				{
					"name": "Create Child",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"person_id\": \"{{personId}}\",\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Doe\",\n  \"date_of_birth\": \"2015-05-10\",\n  \"gender\": \"Female\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/children",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"children"
							]
						},
						"description": "Create a new child for a person"
					},
					"response": []
				},
				{
					"name": "Update Child",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							},
							{
								"key": "Content-Type",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"date_of_birth\": \"2015-05-11\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/children/:childId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"children",
								":childId"
							],
							"variable": [
								{
									"key": "childId",
									"value": "",
									"description": "UUID of the child record to update"
								}
							]
						},
						"description": "Update an existing child record"
					},
					"response": []
				},
				{
					"name": "Delete Child",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{serviceToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/children/:childId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"children",
								":childId"
							],
							"variable": [
								{
									"key": "childId",
									"value": "",
									"description": "UUID of the child record to delete"
								}
							]
						},
						"description": "Delete a child record (soft delete)"
					},
					"response": []
				}
			],
			"description": "Person children endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}