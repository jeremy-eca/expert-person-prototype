{
	"info": {
		"_postman_id": "person-employment-hmac-collection",
		"name": "Person Employment HMAC",
		"description": "Person Employment endpoints with HMAC authentication for expert-persons microservice. Includes employment CRUD operations with proper RESTful patterns.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Person Employment CRUD",
			"item": [
				{
					"name": "Get Person Employment Records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-timestamp",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-tenant-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/{{personId}}/employment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"{{personId}}",
								"employment"
							]
						},
						"description": "Retrieve all employment records for a specific person, ordered by employment start date descending"
					},
					"response": []
				},
				{
					"name": "Get Single Employment Record",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-client-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-timestamp",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-tenant-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/employment/{{employmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"employment",
								"{{employmentId}}"
							]
						},
						"description": "Retrieve a specific employment record by its ID"
					},
					"response": []
				},
				{
					"name": "Create Person Employment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-client-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-timestamp",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-tenant-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employment_start_date\": \"2023-01-15\",\n  \"employment_end_date\": null,\n  \"job_title\": \"Senior Software Engineer\",\n  \"employer_name\": \"Tech Solutions Inc.\",\n  \"employment_type\": \"Full-time\",\n  \"job_function\": \"Engineering\",\n  \"department\": \"Technology\",\n  \"is_active\": true,\n  \"employee_references\": [],\n  \"managers\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/{{personId}}/employment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"{{personId}}",
								"employment"
							]
						},
						"description": "Create a new employment record for a person. Required fields: employment_start_date, job_title, employer_name, employment_type"
					},
					"response": []
				},
				{
					"name": "Update Employment Record",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-client-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-timestamp",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-tenant-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"job_title\": \"Lead Software Engineer\",\n  \"employer_name\": \"Tech Solutions Inc.\",\n  \"employment_type\": \"Full-time\",\n  \"job_function\": \"Engineering\",\n  \"department\": \"Technology\",\n  \"employment_end_date\": \"2024-12-31\",\n  \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/employment/{{employmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"employment",
								"{{employmentId}}"
							]
						},
						"description": "Update an existing employment record. Only provided fields will be updated."
					},
					"response": []
				},
				{
					"name": "Delete Employment Record",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-client-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-timestamp",
								"value": "",
								"type": "text"
							},
							{
								"key": "x-tenant-id",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/employment/{{employmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"employment",
								"{{employmentId}}"
							]
						},
						"description": "Soft delete an employment record (sets deleted_at timestamp)"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// HMAC Authentication Pre-request Script for Expert Global API",
					"const CryptoJS = require('crypto-js');",
					"",
					"const timestamp = Date.now().toString();",
					"pm.environment.set('timestamp', timestamp);",
					"",
					"// Use environment variables or hardcoded values for testing",
					"const clientId = pm.environment.get('clientId') || 'expert-core';",
					"const secretKey = pm.environment.get('clientKey') || 'jH3E2kK28sD9vL9kqP1sT5qQ7wA3zX2r';",
					"const tenantId = pm.environment.get('tenantId') || '01958944-0916-78c8-978d-d2707b71e17d';",
					"",
					"console.log('Environment variables:');",
					"console.log('clientId:', clientId);",
					"console.log('secretKey:', secretKey ? 'SET' : 'MISSING');",
					"console.log('tenantId:', tenantId);",
					"",
					"if (!clientId || !secretKey) {",
					"    console.error('Missing clientId or secretKey in environment variables');",
					"    return;",
					"}",
					"",
					"const method = pm.request.method.toLowerCase();",
					"let stringToSign;",
					"",
					"if (['post', 'put', 'patch', 'delete'].includes(method) && ",
					"    pm.request.body && pm.request.body.raw && pm.request.body.raw.length > 0) {",
					"    const body = pm.request.body.raw;",
					"    let bodyObj;",
					"    try {",
					"        bodyObj = JSON.parse(body);",
					"        stringToSign = JSON.stringify(bodyObj) + timestamp;",
					"    } catch (e) {",
					"        stringToSign = body + timestamp;",
					"    }",
					"    console.log('HMAC check via body');",
					"} else {",
					"    // CRITICAL FIX: Server strips /api prefix",
					"    let path = '/' + pm.request.url.path.join('/');",
					"    if (path.startsWith('/api/')) {",
					"        path = path.substring(4); // Remove '/api' prefix",
					"    }",
					"    stringToSign = path.toLowerCase() + timestamp;",
					"    console.log('HMAC check via path (server strips /api):', path);",
					"}",
					"",
					"const signature = CryptoJS.HmacSHA256(stringToSign, secretKey).toString(CryptoJS.enc.Base64);",
					"",
					"console.log('String to sign:', stringToSign);",
					"console.log('Generated signature:', signature);",
					"",
					"// Clear and set headers",
					"pm.request.headers.remove('x-client-id');",
					"pm.request.headers.remove('x-signature');",
					"pm.request.headers.remove('x-timestamp');",
					"pm.request.headers.remove('x-tenant-id');",
					"pm.request.headers.remove('Content-Type');",
					"",
					"pm.request.headers.add({key: 'x-client-id', value: clientId});",
					"pm.request.headers.add({key: 'x-signature', value: signature});",
					"pm.request.headers.add({key: 'x-timestamp', value: timestamp});",
					"pm.request.headers.add({key: 'x-tenant-id', value: tenantId});",
					"pm.request.headers.add({key: 'Content-Type', value: 'application/json'});",
					"",
					"console.log('HMAC headers set:', {",
					"    'x-client-id': clientId,",
					"    'x-timestamp': timestamp,",
					"    'x-tenant-id': tenantId,",
					"    'method': method,",
					"    'stringToSign': stringToSign",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://expert-api-persons-dev.onrender.com/api",
			"type": "string"
		},
		{
			"key": "personId",
			"value": "123e4567-e89b-12d3-a456-426614174000",
			"type": "string"
		},
		{
			"key": "employmentId",
			"value": "789e0123-e89b-12d3-a456-426614174002",
			"type": "string"
		}
	]
}